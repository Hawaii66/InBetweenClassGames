{"version":3,"sources":["Socket/socketEmit.js","Scripts/LoginHandler.js","Components/Login/Login.js","Scripts/SelectGame.js","Components/SelectGameMenu/SelectGameMenuCard.js","Components/SelectGameMenu/InTheGameInfo.js","Components/SelectGameMenu/SelectGameMenuMain.js","Components/Games/1Truth2LiesGame/Game1Truth2LiesSelectOptions.js","Components/Games/GameLobbyPlayer.js","Components/Games/GameLobby.js","Components/Games/1Truth2LiesGame/Game1Truth2LiesQuestion.js","Components/Games/1Truth2LiesGame/Game1Truth2LiesLeaderboard.js","Components/Games/1Truth2LiesGame/Game1Truth2LiesWinners.js","Components/Games/1Truth2LiesGame/Game1Truth2LiesMain.js","App.js","Socket/socketResieve.js","reportWebVitals.js","index.js"],"names":["socket","socketIOClient","io","connect","handleShowLogin","LoginName","LoginPin","callback","toString","console","log","data","emit","JoinServer","pin","name","handleCreateServer","serverPin","succes","Login","onSubmit","onChangeName","onChangePin","createServer","currentPin","className","id","type","onChange","placeholder","onClick","ChooseGame","index","toSend","gameIndex","SelectGameMenuCard","imageSrc","imageAlt","src","alt","width","InTheGameInfo","SelectGameMenuMain","isAdmin","Game1Truth2LiesSelectOptions","hideOptions","event","preventDefault","target","formData","FormData","t","get","l1","l2","GameLobbyPlayer","GameLobby","lobby","map","item","IndexToName","question","Game1Truth2LiesQuestion","questions","clickedOnQuestion","useState","hasAnswered","setHasAnswered","onQuestionClick","randomIndexes","array","i","length","j","Math","floor","random","temp","shuffleArray","newQuestions","push","Game1Truth2LiesLeaderboard","leaderboard","wasCorrectOnPrevious","nextQuestion","showNextQuestionButton","setShowNextQuestionButton","score","Game1Truth2LiesWinners","winners","GenerateH1","window","open","HasEnteredInAnswer","Game1Truth2Lies","currentState","setCurrentState","setLobby","currentQuestion","setCurrentQuestion","currentLeaderboardStats","setCurrentLeaderboardStats","currentWinners","setCurrentWinners","useEffect","on","lastPlayerWasCorrect","App","showLogin","setShowLogin","showSelectGameMenu","setSelectGameMenu","showGame","setShowGame","setLoginName","setLoginPin","CurrentServerPin","setCurrentServerPin","setIsAdmin","socket1","ShowGames","newState","result","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddcf1e75.chunk.js","sourcesContent":["import socketIOClient from \"socket.io-client\";\r\n\r\nexport var socket = socketIOClient.io.connect(\"https://server-question-game.herokuapp.com/\");\r\nconsole.log(socket);\r\n\r\nexport function JoinServer(data, callback) {\r\n    console.log(data);\r\n    socket.emit(\"joinServer\", data, (data) => {\r\n        console.log(data);\r\n        callback(data);\r\n    });\r\n}\r\n\r\nexport function CreateServer(serverPin) {\r\n    console.log(\"Create New Server\");\r\n    const pin = \"1234\";\r\n    socket.emit(\"createServer\", pin, (data) => {\r\n        if (data.succes) {\r\n            console.log(data.pin);\r\n            serverPin(data.pin);\r\n            console.log(\"Succesfully Created Server\");\r\n        } else {\r\n            console.log(\"Error with creating a server\");\r\n        }\r\n    });\r\n}\r\n\r\nexport function ShowGameWindow(data, callback) {\r\n    console.log(data);\r\n    socket.emit(\"showGame\", data, (data) => {\r\n        console.log(data);\r\n        callback(data);\r\n    });\r\n}\r\n\r\nexport function DoneWith2T1LChoise(data, callback) {\r\n    console.log(data);\r\n    socket.emit(\"HasEntered2T1LChoise\", data, (data) => {\r\n        console.log(\"Answer submited\");\r\n    });\r\n}","import { JoinServer, CreateServer } from \"../Socket/socketEmit.js\";\r\n\r\nexport function handleShowLogin(LoginName, LoginPin, callback) {\r\n    if (LoginName.toString() === \"\" || LoginPin.toString() === \"0\") {\r\n        return;\r\n    }\r\n    console.log(LoginName);\r\n    console.log(LoginPin);\r\n    const toSend = {\r\n        pin: LoginPin,\r\n        name: LoginName\r\n    }\r\n    JoinServer(toSend, (data) => {\r\n        console.log(data);\r\n        //setShowLogin(false);\r\n        callback(false);\r\n    });\r\n}\r\n\r\nexport function handleCreateServer(pin) {\r\n    console.log(\"TEST\");\r\n    CreateServer(pin);\r\n}","import React from 'react'\r\nimport \"./Login.css\";\r\n\r\nfunction Login({ onSubmit, onChangeName, onChangePin, createServer, currentPin }) {\r\n    return (\r\n        <div className=\"LoginTab\">\r\n            <h1 className=\"LoginHeader\">In between class 🎮</h1>\r\n            <form id=\"LoginForm\" onSubmit={onSubmit}>\r\n                <input type=\"text\" name=\"LoginInputName\" id=\"LoginInputName\" onChange={onChangeName} placeholder=\"Username\" />\r\n                <input type=\"number\" name=\"LoginInputPin\" id=\"LoginInputPin\" onChange={onChangePin} placeholder=\"Game Pin\" />\r\n                <button className=\"LoginEnterButton\" >Enter Game</button>\r\n            </form>\r\n            <button onClick={createServer}>Create Server</button>\r\n            {currentPin ? <h1 className=\"GAMEPIN\">{currentPin}</h1> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import { ShowGameWindow } from \"../Socket/socketEmit.js\";\r\n\r\nexport function ChooseGame(index) {\r\n    console.log(\"EST\");\r\n    let currentGameIndex = -1;\r\n    if (index === 0) {\r\n        currentGameIndex = index;\r\n        const toSend = {\r\n            gameIndex: currentGameIndex\r\n        }\r\n        console.log(\"TEST\");\r\n        ShowGameWindow(toSend, (data) => {\r\n            console.log(\"TES\");\r\n        });\r\n    }\r\n}","import React from 'react'\r\n\r\nimport \"./SelectGameMenuCard.css\";\r\n\r\n//Choose Game\r\nimport { ChooseGame } from \"../../Scripts/SelectGame.js\"\r\n\r\nfunction SelectGameMenuCard({ name, imageSrc, imageAlt, index }) {\r\n    function Clicked() {\r\n        console.log(index);\r\n        ChooseGame(index);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Card\">\r\n            <h1>{name}</h1>\r\n            <img src={imageSrc} alt={imageAlt} width=\"100px\" />\r\n            <button onClick={() => Clicked()}>Play</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectGameMenuCard\r\n","import React from 'react'\r\n\r\nimport \"./InTheGameInfo.css\";\r\n\r\nfunction InTheGameInfo() {\r\n    return (\r\n        <div className=\"YouAreIn\">\r\n            <h1>You are in the game</h1>\r\n            <p>Wait for the host to select a game when everyone is in the game</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InTheGameInfo\r\n","import React from 'react'\r\n\r\nimport \"./SelectGameMenuMain.css\";\r\n\r\n//Components\r\nimport Card from \"./SelectGameMenuCard.js\";\r\nimport InGame from \"./InTheGameInfo.js\";\r\n\r\nfunction SelectGameMenuMain({ isAdmin }) {\r\n\r\n    if (!isAdmin) {\r\n        return (\r\n            <div>\r\n                <InGame />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"SelectGameMenuDiv\">\r\n            <h1>Available Games</h1>\r\n            <div className=\"AvailableGames\">\r\n                <Card\r\n                    name=\"1 Truth 2 Lies\"\r\n                    imageSrc=\"https://www.thebostoncalendar.com/system/events/photos/000/307/133/original/Untitled.png?1576701591\"\r\n                    imageAlt=\"1 truth 2 lies\"\r\n                    index={0}\r\n                />\r\n            </div>\r\n            <h2>Comming Soon</h2>\r\n            <div className=\"CommingSoonGames\">\r\n                <p>Not working on any game at the moment</p>\r\n                <p>Planned games are: Math, love o meter</p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectGameMenuMain","import React from 'react'\r\n\r\nimport { DoneWith2T1LChoise } from \"../../../Socket/socketEmit.js\";\r\n\r\nimport \"./Game1Truth2LiesSelectOptions.css\";\r\n\r\nfunction Game1Truth2LiesSelectOptions({ hideOptions }) {\r\n    const SendOptionsToServer = event => {\r\n        event.preventDefault();\r\n        console.log(event.target);\r\n        const formData = new FormData(event.target);\r\n        const t = formData.get(\"1Truth2LiesSelectOptionT1\");\r\n        const l1 = formData.get(\"1Truth2LiesSelectOptionL1\");\r\n        const l2 = formData.get(\"1Truth2LiesSelectOptionL2\");\r\n        const toSend = {\r\n            t,\r\n            l1,\r\n            l2\r\n        }\r\n        console.log(toSend);\r\n        hideOptions(1);\r\n        DoneWith2T1LChoise(toSend, () => {\r\n            console.log(\"success\");\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"Game1Truth2LiesSelectOptions\" >\r\n            <form onSubmit={SendOptionsToServer} >\r\n                <h1 > Truth </h1>\r\n                <textarea type=\"text\"\r\n                    name=\"1Truth2LiesSelectOptionT1\"\r\n                    id=\"1Truth2LiesSelectOptionT1\" />\r\n                <h1 > Lie </h1>\r\n                <textarea type=\"text\"\r\n                    name=\"1Truth2LiesSelectOptionL1\"\r\n                    id=\"1Truth2LiesSelectOptionL1\" />\r\n                <h1 > Lie </h1>\r\n                <textarea type=\"text\"\r\n                    name=\"1Truth2LiesSelectOptionL2\"\r\n                    id=\"1Truth2LiesSelectOptionL2\" />\r\n                <button > Enter Game </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game1Truth2LiesSelectOptions","import React from 'react'\r\n\r\nfunction GameLobbyPlayer({ name }) {\r\n    console.log(\"WHAT\");\r\n\r\n    return (\r\n        <div className=\"LobbyPlayer\">\r\n            <h3>{name}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameLobbyPlayer\r\n","import React from 'react'\r\n\r\n//Components\r\nimport GameLobbyPlayer from \"./GameLobbyPlayer.js\";\r\n\r\nfunction GameLobby({ lobby }) {\r\n    return (\r\n        <div className=\"LobbyHolder\" >\r\n            {lobby ? lobby.map((item, index) => {\r\n                console.log(index.toString());\r\n                return (\r\n                    <div key={index.toString()}>\r\n                        <GameLobbyPlayer name={item.name.name} />\r\n                    </div>\r\n                );\r\n            }) : <p>No one is here, please reload the page</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameLobby","import React, { useState } from 'react'\r\n\r\nimport \"./Game1Truth2LiesQuestion.css\";\r\n\r\nfunction shuffleArray(array) {\r\n    for (var i = array.length - 1; i > 0; i--) {\r\n        var j = Math.floor(Math.random() * (i + 1));\r\n        var temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n    return (array);\r\n}\r\n\r\nfunction IndexToName(index, question) {\r\n    if (index === 1) {\r\n        return question.t;\r\n    }\r\n    if (index === 2) {\r\n        return question.l1;\r\n    }\r\n    if (index === 3) {\r\n        return question.l2;\r\n    }\r\n}\r\n\r\nfunction Game1Truth2LiesQuestion({ name, questions, clickedOnQuestion }) {\r\n    const [hasAnswered, setHasAnswered] = useState(false);\r\n\r\n    const onQuestionClick = (index) => {\r\n        setHasAnswered(true);\r\n        clickedOnQuestion(index);\r\n    }\r\n\r\n    let randomIndexes = shuffleArray([1, 2, 3]);\r\n\r\n    let newQuestions = [];\r\n    newQuestions.push(IndexToName(randomIndexes[0], questions));\r\n    newQuestions.push(IndexToName(randomIndexes[1], questions));\r\n    newQuestions.push(IndexToName(randomIndexes[2], questions));\r\n    console.log(newQuestions);\r\n\r\n    if (hasAnswered === true) {\r\n        return (\r\n            <div className=\"Game1T2LHasAnswerdQuestion\">\r\n                <p>Waiting for other players answers</p>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"Game1T2LQuestionsMain\">\r\n            <h1>{name}</h1>\r\n            <div className=\"Game1T2LQuestions\">\r\n                <div className=\"Game1T2LQuestion\" onClick={() => onQuestionClick(randomIndexes[0] - 1)}>\r\n                    <h2>{newQuestions[0]}</h2>\r\n                </div>\r\n                <div className=\"Game1T2LQuestion\" onClick={() => onQuestionClick(randomIndexes[1] - 1)}>\r\n                    <h2>{newQuestions[1]}</h2>\r\n                </div>\r\n                <div className=\"Game1T2LQuestion\" onClick={() => onQuestionClick(randomIndexes[2] - 1)}>\r\n                    <h2>{newQuestions[2]}</h2>\r\n                </div>\r\n            </div>\r\n            <p>Select the one you think is the truth</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game1Truth2LiesQuestion\r\n","import React, { useState } from 'react'\r\n\r\nimport \"./Game1Truth2LiesLeaderboard.css\";\r\n\r\nfunction Game1Truth2LiesLeaderboard({ leaderboard, j, wasCorrectOnPrevious, nextQuestion }) {\r\n    const [showNextQuestionButton, setShowNextQuestionButton] = useState(true);\r\n\r\n    const nextQuestionClicked = () => {\r\n        console.log(\"TEST\");\r\n        setShowNextQuestionButton(false);\r\n        nextQuestion()\r\n    }\r\n\r\n    return (\r\n        <div className=\"Game1T2LLeaderboardMain\">\r\n            {wasCorrectOnPrevious ? <h1 className=\"Game1T2LLeaderboardCorrect\">Correct</h1> : <h1 className=\"Game1T2LLeaderboardWrong\">Wrong</h1>}\r\n            {leaderboard.map((item, index) => {\r\n                if (index === j) {\r\n                    return (\r\n                        <div className=\"Game1T2LLeaderboardCurrentPlayer\" key={index}>\r\n                            <h3>{item.name.name.toString()}</h3>\r\n                            <h4>{item.score.toString()}</h4>\r\n                        </div>\r\n\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <div className=\"Game1T2LLeaderboardOtherPlayer\" key={index}>\r\n                            <h3>{item.name.name.toString()}</h3>\r\n                            <h4>{item.score.toString()}</h4>\r\n                        </div>\r\n                    )\r\n                }\r\n            })}\r\n            {showNextQuestionButton ? <button onClick={() => nextQuestionClicked()}>Next Question</button> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game1Truth2LiesLeaderboard\r\n","import React from 'react'\r\n\r\nimport \"./Game1Truth2LiesWinners.css\";\r\n\r\nfunction Game1Truth2LiesWinners({ data }) {\r\n\r\n    const GenerateH1 = (data) => {\r\n\r\n        let temp = \"Winners:\"\r\n\r\n        if (data.winners.length === 1) {\r\n            temp = \"Winner:\"\r\n        }\r\n\r\n        return (\r\n            <h1>{temp}</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"Winners\">\r\n            {GenerateH1(data)}\r\n            <div className=\"Game1T2LWinners\">\r\n                {data.winners.map((item, index) => {\r\n                    return (\r\n                        <div key={index.toString()}>\r\n                            <h2>{item.name}: {item.score}</h2>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className=\"HomeButton\">\r\n                <button onClick={() => { window.open(\"http://localhost:3000/\", \"_self\") }}>HOME</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game1Truth2LiesWinners\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n//Components\r\nimport Game1Truth2LiesSelectOptions from \"./Game1Truth2LiesSelectOptions.js\"\r\nimport GameLobby from \"../GameLobby.js\";\r\nimport { socket } from \"../../../Socket/socketEmit.js\";\r\nimport Game1Truth2LiesQuestion from \"./Game1Truth2LiesQuestion.js\";\r\nimport Game1Truth2LiesLeaderboard from \"./Game1Truth2LiesLeaderboard.js\";\r\nimport Game1Truth2LiesWinners from \"./Game1Truth2LiesWinners.js\";\r\n\r\nlet wasCorrectOnPrevious = false;\r\n\r\nfunction HasEnteredInAnswer(index) {\r\n    console.log(index);\r\n    socket.emit(\"2T1LSubmitAnswer\", index, (data) => {\r\n        console.log(data);\r\n        wasCorrectOnPrevious = true;\r\n        console.log(\"_---------------------\");\r\n    });\r\n}\r\n\r\n\r\nfunction Game1Truth2Lies() {\r\n    const [currentState, setCurrentState] = useState(0); //0 = choises, 1 = lobby, 2 = questions, 3 = leaderboard, 4 = winners\r\n    const [lobby, setLobby] = useState();\r\n    const [currentQuestion, setCurrentQuestion] = useState();\r\n    const [currentLeaderboardStats, setCurrentLeaderboardStats] = useState();\r\n    const [currentWinners, setCurrentWinners] = useState();\r\n\r\n    const NextQuestion = () => {\r\n        console.log(\"WHAY\");\r\n        socket.emit(\"1T2LNextQuestion\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on(\"UpdatePlayerLobby\", (lobby) => {\r\n            console.log(\"TEST\");\r\n            //setShowCurrentGame(true);\r\n            setLobby(lobby);\r\n        });\r\n        socket.on(\"Show1T2LQuestion\", (data) => {\r\n            console.log(data);\r\n            setCurrentQuestion(data);\r\n            setCurrentState(2);\r\n        });\r\n        socket.on(\"Show1T2LLeaderboard\", (leaderboard, j, lastPlayerWasCorrect) => {\r\n            const toPush = {\r\n                leaderboard: leaderboard,\r\n                j: j,\r\n                wasCorrectOnPrevious: wasCorrectOnPrevious,\r\n            }\r\n            setCurrentLeaderboardStats(toPush);\r\n            setCurrentState(3);\r\n        });\r\n        socket.on(\"2T1LWinners\", (data) => {\r\n            console.log(data);\r\n            setCurrentWinners(data);\r\n            setCurrentState(4);\r\n        });\r\n    }, []);\r\n\r\n    if (currentState === 0) {\r\n        return (\r\n            <div>\r\n                <Game1Truth2LiesSelectOptions hideOptions={setCurrentState} />\r\n            </div>\r\n        );\r\n    } else if (currentState === 1) {\r\n        return (\r\n            <div>\r\n                <GameLobby lobby={lobby} />\r\n            </div>\r\n        )\r\n    } else if (currentState === 2) {\r\n        return (\r\n            <div>\r\n                <Game1Truth2LiesQuestion name={currentQuestion.name.name} questions={currentQuestion.questions} clickedOnQuestion={HasEnteredInAnswer} />\r\n            </div>\r\n        )\r\n    } else if (currentState === 3) {\r\n        return (\r\n            <div>\r\n                <Game1Truth2LiesLeaderboard leaderboard={currentLeaderboardStats.leaderboard} j={currentLeaderboardStats.j} wasCorrectOnPrevious={currentLeaderboardStats.wasCorrectOnPrevious} nextQuestion={NextQuestion} />\r\n            </div>\r\n        )\r\n    } else if (currentState === 4) {\r\n        return (\r\n            <div>\r\n                <Game1Truth2LiesWinners data={currentWinners} />\r\n            </div>\r\n        )\r\n    }\r\n    /*\r\n        return (\r\n            <div >\r\n                {}\r\n                {currentState ? <GameLobby lobby={lobby} /> : <Game1Truth2LiesSelectOptions hideOptions={setCurrentState} />}\r\n            </div>\r\n        )*/\r\n}\r\n\r\nexport default Game1Truth2Lies","import './App.css';\nimport React, { useState, useEffect } from 'react'\n\n//Scripts\nimport { handleShowLogin, handleCreateServer } from './Scripts/LoginHandler.js'\nimport { socket } from \"./Socket/socketEmit.js\";\nimport { ShowGames } from \"./Socket/socketResieve.js\";\n\n//Components\nimport Login from \"./Components/Login/Login\";\nimport SelectGameMenu from \"./Components/SelectGameMenu/SelectGameMenuMain.js\";\nimport Game1T2L from \"./Components/Games/1Truth2LiesGame/Game1Truth2LiesMain.js\";\n\nfunction App() {\n    const [showLogin, setShowLogin] = useState(true);\n    const [showSelectGameMenu, setSelectGameMenu] = useState(false);\n    const [showGame, setShowGame] = useState(false);\n    const [LoginName, setLoginName] = useState(\"\");\n    const [LoginPin, setLoginPin] = useState(0);\n    const [CurrentServerPin, setCurrentServerPin] = useState();\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    useEffect(() => {\n        let socket1 = socket;\n        socket1.on(\"ShowGame\", (data) => {\n            ShowGames(data, (newState) => {\n                setShowLogin(!newState);\n                setSelectGameMenu(!newState);\n                setShowGame(newState);\n            });\n        });\n        socket1.on(\"ShowGames\", (data) => {\n            setIsAdmin(data);\n        });\n\n    }, [])\n\n    const handleChangeName = event => {\n        setLoginName(event.target.value);\n    }\n\n    const handleChangePin = event => {\n        setLoginPin(event.target.value);\n    }\n\n    const handleLogin = event => {\n        event.preventDefault();\n        handleShowLogin(LoginName, LoginPin, (result) => {\n            console.log(result);\n            setShowLogin(false);\n            setSelectGameMenu(true);\n        });\n    }\n\n    const createServer = () => {\n        handleCreateServer(setCurrentServerPin)\n    }\n    //test\n\n    return (\n        <div className=\"App\" >\n            {showLogin ? < Login onSubmit={handleLogin}\n                onChangeName={handleChangeName}\n                onChangePin={handleChangePin}\n                createServer={createServer}\n                currentPin={CurrentServerPin}\n            /> : null}\n\n            { showSelectGameMenu ? <SelectGameMenu isAdmin={isAdmin} /> : null}\n\n            { showGame ? <Game1T2L /> : null}\n        </div>\n    );\n}\n\nexport default App;","export function ShowGames(data, setShowGame) {\r\n    if (data === 0) { //1truth 2 lies\r\n        setShowGame(true);\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}